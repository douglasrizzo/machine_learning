digraph "NaiveBayes"
{
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{NaiveBayes\n||+ NaiveBayes()\l+ predict()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -lookupRows\n-lookupColumns" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{vector\< string \>\n||}",height=0.2,width=0.4,color="grey75"];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -yFrequency\n-lookupTable" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{Matrix\< int \>\n||+ nCols()\l+ nRows()\l+ Matrix()\l+ Matrix()\l+ Matrix()\l+ Matrix()\l+ Matrix()\l+ operator+()\l+ operator-()\l+ operator-()\l+ operator*()\l+ operator+=()\l+ operator+=()\l+ operator-=()\l+ operator-=()\l+ operator*=()\l+ operator*=()\l+ operator/=()\l+ operator==()\l+ operator==()\l+ operator!=()\l+ operator!=()\l+ operator()()\l+ operator()()\l+ diagonal()\l+ isSquare()\l+ hadamard()\l+ submatrix()\l+ getMinor()\l+ cofactor()\l+ cofactorMatrix()\l+ adjugate()\l+ inverse()\l+ determinant()\l+ transpose()\l+ addColumn()\l+ addColumn()\l+ addRow()\l+ addRow()\l+ removeColumn()\l+ unique()\l+ sort()\l+ count()\l+ mean()\l+ mean()\l+ scatter()\l+ cov()\l+ var()\l+ stdev()\l+ reshape()\land 29 more...\l+ fill()\l+ diagonal()\l+ identity()\l+ ones()\l+ zeros()\l+ sort()\l+ fromCSV()\l- validateIndexes()\l- eigsort()\l}",height=0.2,width=0.4,color="black",URL="$classMatrix.html"];
  Node4 -> Node3 [color="grey25",fontsize="10",style="solid",label=" -mData" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{vector\< int \>\n||}",height=0.2,width=0.4,color="grey75"];
  Node5 -> Node3 [color="grey25",fontsize="10",style="solid",label=" -mRows\n-mCols" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{size_t\n||}",height=0.2,width=0.4,color="grey75"];
  Node6 -> Node3 [dir="back",color="orange",fontsize="10",style="solid",label=" \< int \>" ,fontname="Helvetica"];
  Node6 [label="{Matrix\< T, typename \>\n||+ nCols()\l+ nRows()\l+ Matrix()\l+ Matrix()\l+ Matrix()\l+ Matrix()\l+ Matrix()\l+ operator+=()\l+ operator-=()\l+ operator*=()\l+ operator/=()\l+ operator+()\l+ operator-()\l+ operator*()\l+ operator+=()\l+ operator-=()\l+ operator*=()\l+ operator==()\l+ operator==()\l+ operator!=()\l+ operator!=()\l+ operator-()\l+ operator()()\l+ operator()()\l+ isSquare()\l+ diagonal()\l+ hadamard()\l+ submatrix()\l+ getMinor()\l+ cofactor()\l+ cofactorMatrix()\l+ adjugate()\l+ inverse()\l+ determinant()\l+ transpose()\l+ addColumn()\l+ addRow()\l+ addColumn()\l+ addRow()\l+ removeColumn()\l+ unique()\l+ sort()\l+ count()\l+ mean()\l+ mean()\l+ scatter()\l+ cov()\l+ var()\l+ stdev()\l+ reshape()\land 29 more...\l+ fill()\l+ diagonal()\l+ identity()\l+ ones()\l+ zeros()\l+ sort()\l+ fromCSV()\l- validateIndexes()\l- eigsort()\l}",height=0.2,width=0.4,color="black",URL="$classMatrix.html",tooltip="Matrix implementation, with a series of linear algebra functions. "];
  Node5 -> Node6 [color="grey25",fontsize="10",style="solid",label=" -mRows\n-mCols" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 -> Node6 [color="grey25",fontsize="10",style="solid",label=" -mData" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 [label="{vector\< T \>\n||}",height=0.2,width=0.4,color="grey75"];
}
